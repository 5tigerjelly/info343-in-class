{"version":3,"sources":["../src/index.js"],"names":["Task","title","done","li","document","createElement","textContent","classList","add","addEventListener","console","log","TaskList","tasks","task","push","filter","ul","forEach","appendChild","render","Button","caption","styleClass","btn","App","paremtElm","taskList","purgeButton","purgeCompleted","app","querySelector"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;IAEMA,I;AACF,kBAAYC,KAAZ,EAAmBC,IAAnB,EAAyB;AAAA;;AACrB,aAAKD,KAAL,GAAaA,KAAb;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACH;;;;iCAEQ;AAAA;;AACL,gBAAIC,KAAKC,SAASC,aAAT,CAAuB,IAAvB,CAAT;AACAF,eAAGG,WAAH,GAAiB,KAAKL,KAAtB;AACA,gBAAI,KAAKC,IAAT,EAAe;AACXC,mBAAGI,SAAH,CAAaC,GAAb,CAAiB,MAAjB;AACH;AACDL,eAAGM,gBAAH,CAAoB,OAApB,EAA6B,YAAM;AAC/BC,wBAAQC,GAAR;AACA,sBAAKT,IAAL,GAAY,CAAC,MAAKA,IAAlB;AACAC,mBAAGI,SAAH,CAAaC,GAAb,CAAiB,MAAjB;AACH,aAJD;;AAMA,mBAAOL,EAAP;AACH;;;;;;IAGCS,Q;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AACf,aAAKA,KAAL,GAAaA,KAAb;AACH;;;;gCAEOC,I,EAAM;AACV,iBAAKD,KAAL,CAAWE,IAAX,CAAgBD,IAAhB;AACH;;;yCAEgB;AACb,iBAAKD,KAAL,GAAa,KAAKA,KAAL,CAAWG,MAAX,CAAkB;AAAA,uBAAQ,CAACF,KAAKZ,IAAd;AAAA,aAAlB,CAAb;AACH;;;iCAEQ;AACL,gBAAIe,KAAKb,SAASC,aAAT,CAAuB,IAAvB,CAAT;AACA,iBAAKQ,KAAL,CAAWK,OAAX,CAAmB,gBAAQ;AACvBD,mBAAGE,WAAH,CAAeL,KAAKM,MAAL,EAAf;AACH,aAFD;AAGA,mBAAOH,EAAP;AACH;;;;;;IAGCI,M;AACF,oBAAYC,OAAZ,EAAiD;AAAA,YAA5BC,UAA4B,uEAAf,aAAe;;AAAA;;AAC7C,aAAKD,OAAL,GAAeA,OAAf;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACH;;;;iCAEQ;AACL,gBAAIC,MAAMpB,SAASC,aAAT,CAAuB,KAAvB,CAAV;AACAmB,gBAAIlB,WAAJ,GAAkB,KAAKgB,OAAvB;AACAE,gBAAIjB,SAAJ,CAAcC,GAAd,CAAkB,KAAlB,EAAyB,KAAKe,UAA9B;AACA,mBAAOC,GAAP;AACH;;;;;;IAGCC,G;AACF,iBAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAAA;;AAC7B,aAAKD,SAAL,GAAiBA,SAAjB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,WAAL,GAAmB,IAAIP,MAAJ,CAAW,iBAAX,CAAnB;AACH;;;;iCAEQ;AAAA;;AACL,iBAAKK,SAAL,CAAepB,WAAf,GAA6B,EAA7B;AACA,iBAAKoB,SAAL,CAAeP,WAAf,CAA2B,KAAKQ,QAAL,CAAcP,MAAd,EAA3B;AACA,gBAAII,MAAM,KAAKE,SAAL,CAAeP,WAAf,CAA2B,KAAKS,WAAL,CAAiBR,MAAjB,EAA3B,CAAV;AACAI,gBAAIf,gBAAJ,CAAqB,OAArB,EAA8B,YAAM;AAChC,uBAAKkB,QAAL,CAAcE,cAAd;AACA,uBAAKT,MAAL;AACH,aAHD;AAIH;;;;;;AAEL,IAAIO,WAAW,IAAIf,QAAJ,CAAa,CACxB,IAAIZ,IAAJ,CAAS,oBAAT,CADwB,EAExB,IAAIA,IAAJ,CAAS,iBAAT,CAFwB,EAGxB,IAAIA,IAAJ,CAAS,4BAAT,CAHwB,CAAb,CAAf;AAKA,IAAI8B,MAAM,IAAIL,GAAJ,CAAQrB,SAAS2B,aAAT,CAAuB,MAAvB,CAAR,EAAwCJ,QAAxC,CAAV;AACAG,IAAIV,MAAJ","file":"index.js","sourcesContent":["// @ts-check\n\"use strict\";\n\n//TODO: create classes for Task,\n//TaskList, Button, TaskForm, and App.\n//Each of these classes should have\n//a render() method that renders their\n//data as HTML elements.\n\nclass Task {\n    constructor(title, done) {\n        this.title = title;\n        this.done = done;\n    }\n\n    render() {\n        let li = document.createElement(\"li\");\n        li.textContent = this.title;\n        if (this.done) {\n            li.classList.add(\"done\");\n        }\n        li.addEventListener(\"click\", () => {\n            console.log(this);\n            this.done = !this.done;\n            li.classList.add(\"done\");\n        });\n\n        return li;\n    }\n}\n\nclass TaskList {\n    constructor(tasks) {\n        this.tasks = tasks;\n    }\n\n    addTask(task) {\n        this.tasks.push(task);\n    }\n\n    purgeCompleted() {\n        this.tasks = this.tasks.filter(task => !task.done);\n    }\n\n    render() {\n        let ul = document.createElement(\"ul\");\n        this.tasks.forEach(task => {\n            ul.appendChild(task.render())\n        });\n        return ul;\n    }\n}\n\nclass Button {\n    constructor(caption, styleClass = \"btn-primary\") {\n        this.caption = caption;\n        this.styleClass = styleClass;\n    }\n\n    render() {\n        let btn = document.createElement(\"btn\");\n        btn.textContent = this.caption;\n        btn.classList.add(\"btn\", this.styleClass);\n        return btn;\n    }\n}\n\nclass App {\n    constructor(paremtElm, taskList) {\n        this.paremtElm = paremtElm;\n        this.taskList = taskList;\n        this.purgeButton = new Button(\"Purge Completed\");\n    }\n\n    render() {\n        this.paremtElm.textContent = \"\";\n        this.paremtElm.appendChild(this.taskList.render());\n        let btn = this.paremtElm.appendChild(this.purgeButton.render());\n        btn.addEventListener(\"click\", () => {\n            this.taskList.purgeCompleted();\n            this.render();\n        });\n    }\n}\nlet taskList = new TaskList([\n    new Task(\"Learn ES6 features\"),\n    new Task(\"But a new Tesla\"),\n    new Task(\"But iSchool a new building\")\n]);\nlet app = new App(document.querySelector(\"#app\"), taskList);\napp.render();"]}